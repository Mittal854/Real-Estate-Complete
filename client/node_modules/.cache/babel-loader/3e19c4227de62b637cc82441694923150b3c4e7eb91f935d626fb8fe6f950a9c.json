{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Real-Estate-Complete\\\\client\\\\src\\\\App.jsx\";\nimport HomePage from \"./routes/homepage/homePage\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useParams } from \"react-router-dom\";\n// import './layout.css';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport ListPage from \"./routes/listpage/listPage\";\nimport Layout from \"./routes/layout/layout\";\nimport SinglePage from \"./routes/SinglePage/singlePage\";\nimport ProfilePage from \"./routes/profilePage/profilePage\";\nimport AboutPage from \"./routes/AboutPage/AboutPage\";\nimport RegisterPage from \"./routes/registerPage/registerPage\";\nimport LoginPage from \"./routes/loginPage/loginPage\";\nimport ContactPage from \"./routes/ContactPage/ContactPage\";\n// import Slider from \"./routes/slider/Slider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  const router1 = createBrowserRouter([{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/list\",\n      element: /*#__PURE__*/_jsxDEV(ListPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this)\n    },\n    // When we use Single Items we are gonna need id, which will be dynamic and can be a string or a number\n    // {\n    //   path: \"/:id\",\n    //   element: <SinglePage />,\n    // },\n    {\n      path: \"/:id\",\n      element: /*#__PURE__*/_jsxDEV(SinglePageWrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/profile\",\n      element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/about\",\n      element: /*#__PURE__*/_jsxDEV(AboutPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"/register\",\n      element: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this)\n    }, {\n      path: \"/contact\",\n      element: /*#__PURE__*/_jsxDEV(ContactPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this)\n    }, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this)\n    }]\n  }]);\n  function SinglePageWrapper() {\n    _s();\n    let {\n      id\n    } = useParams(); // Get the id parameter from the URL\n    return /*#__PURE__*/_jsxDEV(SinglePage, {\n      postId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  _s(SinglePageWrapper, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n    return [useParams];\n  });\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["HomePage","useParams","createBrowserRouter","RouterProvider","ListPage","Layout","SinglePage","ProfilePage","AboutPage","RegisterPage","LoginPage","ContactPage","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","router1","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","SinglePageWrapper","id","postId","router","_c","$RefreshReg$"],"sources":["D:/React/Real-Estate-Complete/client/src/App.jsx"],"sourcesContent":["import HomePage from \"./routes/homepage/homePage\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n// import './layout.css';\r\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\r\nimport ListPage from \"./routes/listpage/listPage\";\r\nimport Layout from \"./routes/layout/layout\";\r\nimport SinglePage from \"./routes/SinglePage/singlePage\";\r\nimport ProfilePage from \"./routes/profilePage/profilePage\";\r\nimport AboutPage from \"./routes/AboutPage/AboutPage\";\r\nimport RegisterPage from \"./routes/registerPage/registerPage\";\r\nimport LoginPage from \"./routes/loginPage/loginPage\";\r\nimport ContactPage from \"./routes/ContactPage/ContactPage\";\r\n// import Slider from \"./routes/slider/Slider\";\r\n\r\nfunction App() {\r\n  const router1 = createBrowserRouter([\r\n    {\r\n      path: \"/\",\r\n      element: <Layout />,\r\n      children: [\r\n        {\r\n          path: \"/\",\r\n          element: <HomePage />,\r\n        },\r\n        {\r\n          path: \"/list\",\r\n          element: <ListPage />,\r\n        },\r\n        // When we use Single Items we are gonna need id, which will be dynamic and can be a string or a number\r\n        // {\r\n        //   path: \"/:id\",\r\n        //   element: <SinglePage />,\r\n        // },\r\n        {\r\n          path: \"/:id\",\r\n          element: <SinglePageWrapper />,\r\n        },\r\n        {\r\n          path: \"/profile\",\r\n          element: <ProfilePage />,\r\n        },\r\n        {\r\n          path: \"/about\",\r\n          element: <AboutPage />,\r\n        },\r\n        {\r\n          path:\"/register\",\r\n          element:<RegisterPage/>\r\n        },\r\n        {\r\n          path:\"/contact\",\r\n          element:<ContactPage/>\r\n        },\r\n        {\r\n          path:\"/login\",\r\n          element:<LoginPage/>\r\n        }\r\n\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  function SinglePageWrapper() {\r\n    let { id } = useParams(); // Get the id parameter from the URL\r\n    return <SinglePage postId={id} />;\r\n  }\r\n  return <RouterProvider router={router1} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}